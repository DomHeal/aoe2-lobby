{"version":3,"sources":["img1.jpeg","components/Loading.js","util.js","Lobbies.js","Home.js","About.js","Friends.js","Navigation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Loading","text","Spinner","type","color","className","joinLobby","lobby_id","url","console","log","i","document","createElement","style","display","src","onload","parentNode","removeChild","body","appendChild","mapSize","size","gameType","columns","name","selector","button","cell","row","Button","onClick","join","sortable","subColumns","Friends","useState","results","setResults","isLoading","setIsLoading","useEffect","fetchData","interval","setInterval","clearInterval","fetch","then","res","json","result","error","data","reduce","list","item","num_players","num_slots","server","has_password","push","id","match_uuid","playersCount","players","rating","average_rating","map","game_type","map_type","SubTable","Row","Col","sm","lg","offset","highlightOnHover","dense","theme","pointerOnHover","defaultSortField","selectableRowsComponentProps","inkDisabled","expandableRows","expandOnRowClicked","expandableRowsComponent","noHeader","Home","alt","require","About","friendsList","setError","friendsFoundList","filter","playe","includes","toLowerCase","length","tableData","Alert","Navigation","Navbar","backgroundColor","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","to","path","App","basename","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f1feed89.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img1.7a3826f9.jpeg\";","import React from \"react\";\nimport {Spinner} from \"reactstrap\";\n\nexport default function Loading({text}) {\n    return <>\n        <Spinner type=\"grow\" color=\"light\"/>\n        <p className=\"text-white\">{text}</p>\n    </>\n}\n","\nexport const joinLobby = (lobby_id) => {\n    let url = \"steam://joinlobby/813780/\" + lobby_id;\n    console.log('Attempting to join lobby - ' + url)\n    let i = document.createElement('iframe');\n    i.style.display = 'none';\n    i.src = url;\n    i.onload = function () {\n        i.parentNode.removeChild(i);\n    };\n    document.body.appendChild(i)\n};\n\nexport const mapSize = (size) =>{\n    switch (size) {\n        case 0:\n            return \"Tiny\";\n        case 1:\n            return \"Small\";\n        case 2:\n            return \"Medium\";\n        case 3:\n            return \"Normal\";\n        case 4:\n            return \"Large\";\n        case 5:\n            return \"Giant\";\n        case 6:\n            return \"Luda\";\n        default:\n            return size\n    }\n}\n\nexport const gameType = (type) =>{\n    switch (type) {\n        case 0:\n            return \"Random Map\";\n        case 1:\n            return \"Regicide\";\n        case 2:\n            return \"Deathmatch\";\n        case 3:\n            return \"Scenario\";\n        case 13:\n            return \"Empire Wars\";\n        default:\n            return type\n    }\n}\n","import React, {useEffect, useState} from \"react\";\nimport {Button, Col, Row} from 'reactstrap';\nimport './App.css';\nimport Loading from \"./components/Loading\";\nimport {gameType, joinLobby, mapSize} from \"./util\";\nimport DataTable from \"react-data-table-component\";\n\nconst columns = [\n    {\n        name: 'Join',\n        selector: 'join',\n        button: true,\n        cell: row => <Button onClick={() => joinLobby(row.join)}>Join</Button>\n    },\n    {\n        name: 'Type',\n        selector: 'type',\n        sortable: true\n    },\n    {\n        name: 'Name',\n        selector: 'name',\n        sortable: true,\n    },\n    {\n        name: 'Players',\n        selector: 'playersCount',\n        sortable: true\n    },\n    {\n        name: 'Map',\n        selector: 'map',\n        sortable: true,\n    },\n    {\n        name: 'Server',\n        selector: 'server',\n        sortable: true,\n    },\n    {\n        name: 'Average Rating',\n        selector: 'rating',\n        sortable: true,\n    },\n\n];\nconst subColumns = [\n    // profile_id, steam_id, name, clan, country, slot, slot_type, rating, games, wins, streak, drops, color, team, civ\n    {\n        name: 'Name',\n        selector: 'name',\n    },\n    {\n        name: 'Games',\n        selector: 'games',\n    },\n    {\n        name: 'Wins',\n        selector: 'wins',\n    },\n    {\n        name: 'Streak',\n        selector: 'streak',\n    },\n    {\n        name: 'Drops',\n        selector: 'drops',\n    },\n    {\n        name: 'Rating',\n        selector: 'rating',\n    },\n];\n\nexport default function Friends() {\n    const [results, setResults] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        fetchData()\n        const interval = setInterval(() => {\n            fetchData()\n        }, 5000);\n        return () => clearInterval(interval);\n\n    }, []);\n\n    const fetchData = () => {\n        console.log('searching for lobbies')\n        fetch(\"https://aoe2.net/api/lobbies?game=aoe2de\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setResults(result)\n                    setIsLoading(false)\n                },\n                (error) => {\n                    console.error(error)\n                }\n            )\n    }\n\n\n    if (isLoading) {\n        return <Loading text={'Loading lobbies...'}/>\n    }\n\n    const data = results.reduce((list, item) => {\n        if (item.num_players === item.num_slots) {\n            return list\n        }\n        if (item.server !== 'westeurope' && item.server !== 'ukwest') {\n            return list\n        }\n        if (item.has_password) {\n            return list\n        }\n\n        list.push({\n            join: item.lobby_id,\n            id: item.match_uuid,\n            name: item.name,\n            server: item.server,\n            playersCount: item.num_players + '/' + item.num_slots,\n            players: item.players,\n            rating: item.average_rating,\n            map: gameType(item.game_type),\n            type: mapSize(item.map_type)\n        })\n        return list\n    },[]);\n\n    const SubTable = ({ data }) => <Row><Col sm=\"12\" lg={{ size: 6, offset: 3 }}><DataTable\n            columns={subColumns}\n            data={data.players}\n            highlightOnHover\n            dense\n            theme={'dark'}/>\n    </Col>\n    </Row>\n\n    return <DataTable\n            columns={columns}\n            data={data}\n            theme={'dark'}\n            pointerOnHover\n            // highlightOnHover\n            defaultSortField=\"name\"\n            selectableRowsComponentProps={{ inkDisabled: true }}\n            expandableRows\n            expandOnRowClicked\n            expandableRowsComponent={<SubTable/>}\n            // fixedHeader\n            noHeader\n        />\n}\n","import React from \"react\";\nimport './App.css';\n\nexport default function Home() {\n    return <img alt=\"\" src={require('./img1.jpeg') }/>\n}\n","import React from \"react\";\nimport './App.css';\n\nexport default function About() {\n    return <>\n        <p className=\"text-white\">Github URL: www.github.com/domheal/aoe2-lobby </p>\n    </>\n\n}\n","import React, {useEffect, useState} from \"react\";\nimport {Alert, Button} from 'reactstrap';\nimport './App.css';\nimport Loading from \"./components/Loading\";\nimport {gameType, joinLobby, mapSize} from \"./util\";\nimport DataTable from \"react-data-table-component\";\n\nconst friendsList = [\n    \"xeon\",\n    \"methaddict\",\n    \"welshwonder\",\n    \"fatkidslag_irl\"\n];\n\nconst columns = [\n    {\n        name: 'Join',\n        selector: 'join',\n        button: true,\n        cell: row => <Button onClick={() => joinLobby(row.join)}>Join</Button>\n    },\n    {\n        name: 'Type',\n        selector: 'type',\n        sortable: true\n    },\n    {\n        name: 'Name',\n        selector: 'name',\n        sortable: true,\n    },\n    {\n        name: 'Players',\n        selector: 'players',\n        sortable: true\n    },\n    {\n        name: 'Map',\n        selector: 'map',\n        sortable: true,\n    },\n    {\n        name: 'Server',\n        selector: 'server',\n        sortable: true,\n    },\n    {\n        name: 'Average Rating',\n        selector: 'rating',\n        sortable: true,\n    },\n\n];\n\nexport default function Friends() {\n    const [results, setResults] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState('')\n\n    useEffect(() => {\n        fetchData()\n        const interval = setInterval(() => {\n            fetchData()\n        }, 3000);\n        return () => clearInterval(interval);\n    });\n\n    const fetchData = () => {\n        console.log('searching for lobbies')\n        fetch(\"https://aoe2.net/api/lobbies?game=aoe2de\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result)\n                    const friendsFoundList = [];\n                    for (const res of result) {\n                        const found = res.players.filter(playe => {\n                            if (playe.name == null) return false\n                            return friendsList.includes(playe.name.toLowerCase())\n                        });\n                        if (found.length > 0){\n                            console.log(\"friend found\");\n                            friendsFoundList.push(res)\n                        }\n                    }\n                    const tableData = friendsFoundList.map(item => { return {\n                        join: item.lobby_id,\n                        id: item.match_uuid,\n                        name: item.name,\n                        server: item.server,\n                        players: item.num_players + '/' + item.num_slots,\n                        rating: item.average_rating,\n                        map: gameType(item.game_type),\n                        type: mapSize(item.map_type)\n                    }})\n                    setResults(tableData);\n                    setIsLoading(false)\n                    setError(\"\")\n                },\n                (error) => {\n                    setError(error)\n                }\n            )\n    }\n\n    if (isLoading) {\n        return <Loading text={'Finding friends...'}/>\n    }\n    return <>\n        {error === \"\" && <Alert color=\"danger\">\n            Failed to get aoe2.net data - {error}\n        </Alert>}\n        <DataTable\n            columns={columns}\n            data={results}\n            theme={'dark'}\n            pointerOnHover\n            // highlightOnHover\n            defaultSortField=\"name\"\n            selectableRowsComponentProps={{ inkDisabled: true }}\n            expandableRows\n            expandOnRowClicked\n            // expandableRowsComponent={SubTable(data)}\n        />\n    </>\n\n}\n","import React from \"react\";\nimport {Collapse, Nav, Navbar, NavbarBrand, NavbarToggler, NavItem} from 'reactstrap';\nimport './App.css';\nimport {Link, Route, Switch} from \"react-router-dom\";\n// import Friends from \"./Friends\";\nimport Lobbies from \"./Lobbies\";\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport Friends from \"./Friends\";\n\nexport default function Navigation() {\n\n    return (\n        <div>\n            <Navbar style={{backgroundColor: '#424242'}} expand=\"md\">\n                <NavbarBrand href=\"/\">AoE2:DE</NavbarBrand>\n                <NavbarToggler/>\n                <Collapse navbar>\n                    <Nav className=\"mr-auto\" navbar>\n                        <NavItem className=\"pr-2\">\n                            <Link to=\"/\">Home</Link>\n                        </NavItem>\n                        <NavItem className=\"pr-2\">\n                            <Link to=\"/friends\">Friends</Link>\n                        </NavItem>\n                        <NavItem className=\"pr-2\">\n                            <Link to=\"/lobbies\">Lobbies</Link>\n                        </NavItem>\n                        <NavItem className=\"pr-2\">\n                            <Link to=\"/about\">About</Link>\n                        </NavItem>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n            <Switch>\n                <Route path=\"/friends\">\n                    <Friends/>\n                </Route>\n                <Route path=\"/lobbies\">\n                    <Lobbies/>\n                </Route>\n                <Route path=\"/about\">\n                    <About/>\n                </Route>\n                <Route path=\"/\">\n                    <Home/>\n                </Route>\n            </Switch>\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport Navigation from \"./Navigation\";\nimport {HashRouter as Router} from \"react-router-dom\";\n\n\nfunction App() {\n    return (\n        <Router basename='/'>\n            <div className=\"App\">\n                <Navigation/>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}